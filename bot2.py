import discord
from discord.ext import commands
import json
import sqlite3
from tabulate import tabulate
from config import settings
from asyncio import sleep

client = commands.Bot(command_prefix = settings['PREFIX'], intents = discord.Intents.all())
client.remove_command("help")
connection = sqlite3.connect('server.db')
cursor = connection.cursor()

cursor.execute("""CREATE TABLE IF NOT EXISTS users (
	id INT,
	cash INT,
	rep INT
)""")
cursor.execute("""CREATE TABLE IF NOT EXISTS status (
	id INTEGER PRIMARY KEY,
	status BOOL,
	arg TEXT
	)""")
cursor.execute("""CREATE TABLE IF NOT EXISTS counter (
	stat BOOL,
	author INT,
	channel INT
	)""")

cursor.execute("""CREATE TABLE IF NOT EXISTS tickets (
	stat BOOL,
	author INT,
	channel INT
	)""")


connection.commit()
for row in cursor.execute("SELECT * FROM counter"):
	print(row)

@client.event
async def on_ready():
	print("Bot Has been runned")
	game = discord.Game("?help")
	await client.change_presence(activity=game)
	for guild in client.guilds:
		for member in guild.members:
			cursor.execute(f"SELECT id FROM users where id={member.id}")
			if cursor.fetchone()==None:
				cursor.execute(f"INSERT INTO users VALUES ({member.id}, 0 , 0)")
				connection.commit()
			else:
				pass


connection.commit()


@client.command()
@commands.has_role(933672340150165714)
async def set_wave_channel(ctx, channel):
	cursor.execute("SELECT id FROM status where id=1")
	if cursor.fetchone()==None:
		cursor.execute(f"INSERT INTO status VALUES (?, ?, ?)",(1, False, 0))
		connection.commit()
	else:
		pass
	cursor.execute("UPDATE status SET status = True where id=1")
	cursor.execute(f'UPDATE status SET arg={channel} where id=1')
	connection.commit()
	embed=discord.Embed(color =0x2ecc71, description=f"–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–π –∫–∞–Ω–∞–ª —É—Å–ø–µ—à–Ω–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –Ω–∞ {channel}")
	await ctx.send(embed=embed)


@client.event
async def on_member_join(member):
	for row in cursor.execute("SELECT arg, status FROM status where id=1"):
		status = row[1]
		c_id = row[0]
		if status == True:
			channel = client.get_channel(c_id)
			if member.id == 894893094594564156:
				embed=discord.Embed(color =0x8346f0, description=f"**–ü—Ä–∏–≤–µ—Ç –∑–∞—é—à–∞ —ç—Ç–æ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ –¥–ª—è —Ç–µ–±—è –æ—Ç <@608599277027196945>**")
				await channel.send(f"–ü—Ä–∏–≤–µ—Ç <@{member.id}>!", embed=embed)
			else:
				embed=discord.Embed(color =0x8346f0, description=f"**–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –Ω–∞ –Ω–∞—à —Å–µ—Ä–≤–µ—Ä, –∑–¥–µ—Å—å —Ç—ã —Å–º–æ–∂–µ—à—å –ø—Ä–æ–≤–µ—Å—Ç–∏ —Å–¥–µ–ª–∫–∏ —á–µ—Ä–µ–∑ –Ω–∞—à–∏—Ö –≥–∞—Ä–∞–Ω—Ç–æ–≤ –±–µ–∑ –∫–∞–∫–æ–≥–æ-–ª–∏–±–æ –æ–±–º–∞–Ω–∞, –∞ —Ç–∞–∫ –∂–µ –∑–∞–≤–µ—Å—Ç–∏ –Ω–æ–≤—ã–µ –æ–±—â–µ–Ω–∏—è!**")
				await channel.send(f"–ü—Ä–∏–≤–µ—Ç –¥—Ä—É–∂–∏—â–µ <@{member.id}>!", embed=embed)
				cursor.execute(f"SELECT id FROM users WHERE id = {member.id}")
			if cursor.fetchone()==None:
				cursor.execute(f"INSERT INTO users VALUES ({member.id} , 0 , 0)")
				connection.commit()
		else:
			pass

@client.command()
@commands.has_role(933672340150165714 or 926469565343477760)
async def setup(ctx):
	msg = await ctx.send(
		embed = discord.Embed(title = '–ù—É–∂–Ω–∞ —Å–¥–µ–ª–∫–∞?'),
		components = [
			Button(style = ButtonStyle.green, label = '–î–∞', custom_id="Yes")
        ])


@client.command(aliases=["create"])
@commands.has_any_role('üë®‚Äçüëß‚Äçüë¶ | –ü–æ—Å—Ä–µ–¥–Ω–∏–∫')
async def claim(ctx):
	uid = ctx.author.id
	cursor.execute(f"SELECT author FROM counter where author={uid}")
	if cursor.fetchone() == None:
		cursor.execute(f"INSERT INTO counter VALUES (False, {uid}, 0)")
		connection.commit()
	else:
		pass
	for row in cursor.execute(f"SELECT channel FROM counter where author={uid}"):
		channel = row[0]
		try:
			guild = ctx.message.guild
			channel1 = guild.get_channel(channel)
			user= await client.fetch_user(uid)
			await channel1.set_permissions(user, read_messages=True, send_messages=True, view_channel=True, manage_channels=True)
		except:
			cursor.execute(f"UPDATE counter SET stat=False, channel=0 where author={uid}")
			connection.commit()


	for row in cursor.execute(f"SELECT stat FROM counter where author={uid}"):
		count = row[0]
		if count == False:
			guild = ctx.message.guild
			category = discord.utils.get(guild.categories, name="–°–¥–µ–ª–∫–∏")
			channel = await guild.create_text_channel(f'—Å–¥–µ–ª–∫–∞-{ctx.author.name}', category=category)
			user= await client.fetch_user(uid)
			await channel.set_permissions(user, read_messages=True, send_messages=True, view_channel=True, manage_channels=True)
			cursor.execute(f'UPDATE counter SET stat=True,channel = {channel.id} where author={uid}')
			connection.commit()
			await ctx.send(embed=discord.Embed(description=f"**–¢–∏–∫–µ—Ç <#{channel.id}> —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω <@{ctx.author.id}>**"))
			await channel.send(embed=discord.Embed(description=f"**–¢–∏–∫–µ—Ç —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω <@{ctx.author.id}>**"))

@client.command(aliases=["+"])
@commands.has_any_role('üë®‚Äçüëß‚Äçüë¶ | –ü–æ—Å—Ä–µ–¥–Ω–∏–∫')
async def add(ctx, member: discord.Member):
	uid = ctx.author.id
	guild = ctx.message.guild
	cursor.execute(f"SELECT author FROM counter where author={uid}")
	if cursor.fetchone() == None:
		cursor.execute(f"INSERT INTO counter VALUES (False, {uid}, 0)")
		connection.commit()
	for row in cursor.execute(f"SELECT channel FROM counter where author={uid}"):
		channel1id = row[0]

		try:
			guild = ctx.message.guild
			channel1 = guild.get_channel(channel1id)
			user= await client.fetch_user(uid)
			await channel1.set_permissions(user, read_messages=True, send_messages=True, view_channel=True, manage_channels=True)
		except:
			cursor.execute(f"UPDATE counter SET stat=False, channel=0 where author={uid}")
			connection.commit()

		channel1 = guild.get_channel(channel1id)
		user= await client.fetch_user(member.id)
		await channel1.set_permissions(user, read_messages=True, send_messages=True, view_channel=True)
		try:
			role = guild.get_role(936505743987867659)
			await member.add_roles(role)
		except:
			pass
		await channel1.send(f"–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ <@{member.id}>.",embed=discord.Embed(description=f"**–£—á–∞—Å—Ç–Ω–∏–∫ <@{member.id}> —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω –≤ <#{channel1.id}>.**"))

@client.command(aliases=["del", "-"])
@commands.has_any_role('üë®‚Äçüëß‚Äçüë¶ | –ü–æ—Å—Ä–µ–¥–Ω–∏–∫')
async def delete(ctx, member: discord.Member):
	guild = ctx.message.guild
	uid = ctx.author.id
	channel = client.get_channel(ctx.channel.id)
	cursor.execute(f"SELECT author FROM counter where author={uid}")
	if cursor.fetchone() == None:
		cursor.execute(f"INSERT INTO counter VALUES (False, {uid}, 0)")
		connection.commit()
	for row in cursor.execute(f"SELECT channel FROM counter where author={uid}"):
		channel1id = row[0]
		try:
			guild = ctx.message.guild
			channel1 = guild.get_channel(channel1id)
			user= await client.fetch_user(uid)
			await channel1.set_permissions(user, read_messages=True, send_messages=True, view_channel=True, manage_channels=True)
		except:
			cursor.execute(f"UPDATE counter SET stat=False, channel=0 where author={uid}")
			connection.commit()
		channel1 = client.get_channel(channel1id)
		user= await client.fetch_user(member.id)
		await channel1.set_permissions(user, read_messages=False, send_messages=False, view_channel=False)
		try:
			role = guild.get_role(936505743987867659)
			await member.remove_roles(role)
		except:
			pass
		await channel1.send(embed=discord.Embed(description=f"**–£—á–∞—Å—Ç–Ω–∏–∫ <@{member.id}> —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª—ë–Ω –∏–∑ <#{channel1.id}>.**"))

@client.command()
@commands.has_any_role('üë®‚Äçüëß‚Äçüë¶ | –ü–æ—Å—Ä–µ–¥–Ω–∏–∫')
async def close(ctx):
	uid = ctx.author.id
	guild = ctx.message.guild
	channel = guild.get_channel(ctx.channel.id)
	cursor.execute(f"SELECT author FROM counter where author={uid}")
	if cursor.fetchone() == None:
		cursor.execute(f"INSERT INTO counter VALUES (False, {uid}, 0)")
		connection.commit()
	for row in cursor.execute(f"SELECT channel FROM counter where author={uid}"):
		channel1id = row[0]
		try:
			guild = ctx.message.guild
			channel1 = guild.get_channel(channel1id)
			user= await client.fetch_user(uid)
			await channel1.set_permissions(user, read_messages=True, send_messages=True, view_channel=True, manage_channels=True)
		except:
			cursor.execute(f"UPDATE counter SET stat=False, channel=0 where author={uid}")
			connection.commit()
		channel1 = guild.get_channel(channel1id)
		await channel1.delete()
		

@client.command(aliases=["–≤–∏–ø"])
@commands.has_any_role('üë®‚Äçüëß‚Äçüë¶ | –ü–æ—Å—Ä–µ–¥–Ω–∏–∫')
async def vip(ctx):
	await ctx.reply(embed=discord.Embed(description=f"**–ü—Ä–∏–≤–∞—Ç–Ω—ã–π —Å–µ—Ä–≤–µ—Ä –≤ –∞–¥–æ–ø—Ç–µ: [–ù–∞–∂–º–∏ —Å—é–¥–∞ —á—Ç–æ-–±—ã –∑–∞–π—Ç–∏](https://www.roblox.com/games/920587237?privateServerLinkCode=41122651371977856802806669923465)**"))

@client.command(aliases=["vipmm", "–≤–∏–ø–º–º2", "–≤–∏–ø–º–º"])
@commands.has_any_role('üë®‚Äçüëß‚Äçüë¶ | –ü–æ—Å—Ä–µ–¥–Ω–∏–∫')
async def vipmm2(ctx):
	await ctx.reply(embed=discord.Embed(description=f"**–ü—Ä–∏–≤–∞—Ç–Ω—ã–π —Å–µ—Ä–≤–µ—Ä –≤ –º–∞—Ä–¥–µ—Ä –º–∏—Å—Ç–µ—Ä–∏: [–ù–∞–∂–º–∏ —Å—é–¥–∞ —á—Ç–æ-–±—ã –∑–∞–π—Ç–∏](https://www.roblox.com/games/142823291?privateServerLinkCode=89852226291968909722581151698927)**"))

@client.command(aliases=["–≤–∏–ø–ø—Å—Ö", "–≤–∏–ø–ø–µ—Ç—Å–∏–º","vipps","–≤–∏–ø–ø–µ—Ç"])
@commands.has_any_role('üë®‚Äçüëß‚Äçüë¶ | –ü–æ—Å—Ä–µ–¥–Ω–∏–∫')
async def vippsx(ctx):
	await ctx.reply(embed=discord.Embed(description=f"**–ü—Ä–∏–≤–∞—Ç–Ω—ã–π —Å–µ—Ä–≤–µ—Ä –≤ –ø–µ—Ç —Å–∏–º—É–ª—è—Ç–æ—Ä X: [–ù–∞–∂–º–∏ —Å—é–¥–∞ —á—Ç–æ-–±—ã –∑–∞–π—Ç–∏](https://www.roblox.com/games/6284583030/x3-Pet-Simulator-X?privateServerLinkCode=55975160176260713274764851250283)**"))

@client.command()
@commands.has_any_role('üë®‚Äçüëß‚Äçüë¶ | –ü–æ—Å—Ä–µ–¥–Ω–∏–∫')
async def check(ctx):
	await ctx.reply(embed=discord.Embed(description=f"**–ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–≤–æ–π –ø–µ–Ω–¥–∏–Ω–≥: [–ù–∞–∂–º–∏ —Å—é–¥–∞ —á—Ç–æ-–±—ã –ø—Ä–æ–≤–µ—Ä–∏—Ç—å](https://www.roblox.com/transactions)**"))

@client.command(aliases=["—Ç—É—Ç–æ—Ä–∏–∞–ª"])
@commands.has_any_role('üë®‚Äçüëß‚Äçüë¶ | –ü–æ—Å—Ä–µ–¥–Ω–∏–∫')
async def tutorial(ctx):
	embed = discord.Embed(description=f"**–¢—É—Ç–æ—Ä–∏–∞–ª –∫–∞–∫ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –≤–∏–ø:**")
	embed.set_image(url = "https://rblx.ru/images/roblox_buy.gif")
	await ctx.reply(embed=embed)

@client.command(aliases = ['$', 'cash', '–±–∞–ª–∞–Ω—Å', '–¥–µ–Ω—å–≥–∏', '–±–∞–ª'])
async def balance(ctx, member: discord.Member = None):
	if member is None:
		uid=ctx.author.id
		cursor.execute(f'SELECT id FROM users where id={uid}')
		if cursor.fetchone() is None:
			cursor.execute(f'INSERT INTO users VALUES ({uid}, 0 , 0)')
			connection.commit()
		for row in cursor.execute(f"SELECT cash FROM users WHERE id = {uid}"):
			cash = row[0]
			await ctx.reply(f'–í–∞—à –±–∞–ª–∞–Ω—Å —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç **{cash}**<:coinGartex:957170467716857866>')
	else:
		uid=member.id
		cursor.execute(f'SELECT id FROM users where id={uid}')
		if cursor.fetchone() is None:
			cursor.execute(f'INSERT INTO users VALUES ({uid}, 0 , 0)')
			connection.commit()
		for row in cursor.execute(f"SELECT cash FROM users WHERE id = {uid}"):
			cash = row[0]
			await ctx.reply(f'–ë–∞–ª–∞–Ω—Å –¥–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç **{cash}**<:coinGartex:957170467716857866>')
@client.command(aliases = ['daily'])
async def timely(ctx):
	uid=ctx.author.id
	cursor.execute(f'SELECT id FROM users where id={uid}')
	if cursor.fetchone() is None:
		cursor.execute(f'INSERT INTO users VALUES ({uid}, 0 , 0)')
		connection.commit()
	for row in cursor.execute(f'SELECT cash FROM users WHERE id = {uid}'):
		cash = row[0]
		cash +=10
		cursor.execute(f'UPDATE users SET cash={cash} where id={uid}')
		await ctx.send('–¢—ã –ø–æ–ª—É—á–∏–ª 10<:coinGartex:957170467716857866> –ø–æ–∑–¥—Ä–∞–≤–ª—è—é!')
		connection.commit()
@client.command()
async def help(ctx):
	await ctx.send(f"**–î–ª—è —Ä–∞–±–æ—Ç—ã –≤—Å–µ—Ö —ç—Ç–∏—Ö –∫–æ–º–∞–Ω–¥ –Ω—É–∂–Ω–æ –∏–º–µ—Ç—å —Ä–æ–ª—å —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º 'üë®‚Äçüëß‚Äçüë¶ | –ü–æ—Å—Ä–µ–¥–Ω–∏–∫' —Å —ç–º–æ–¥–∑–∏:**\n?claim - —Å–æ–∑–¥–∞—Ç—å —Å–¥–µ–ª–∫—É\n?add [@–£—á–∞—Å—Ç–Ω–∏–∫ | ID] - –¥–æ–±–∞–≤–∏—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–∞ –≤ —Å–¥–µ–ª–∫—É\n?del [@–£—á–∞—Å—Ç–Ω–∏–∫ | ID] - —É–¥–∞–ª–∏—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–∞ —Å–æ —Å–¥–µ–ª–∫–∏\n?close - –∑–∞–∫—Ä—ã—Ç—å —Å–¥–µ–ª–∫—É\n?vip - –≤–∏–ø–∫–∞ –≤ –∞–¥–æ–ø—Ç–µ\n?vipmm2 - –≤–∏–ø–∫–∞ –≤ –º–º2\n?vippsx - –≤–∏–ø–∫–∞ –≤ –ø—Å—Ö\n?check - –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–µ–Ω–¥–∏–Ω–≥\n?tutorial - –ø–æ–∫–∞–∑–∞—Ç—å –∫–∞–∫ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –≤–∏–ø–∫—É")

client.run(settings['TOKEN'])
